{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx","App.module.scss"],"names":["console","log","process","hiddenIframeOptions","IFrameContent","iframeVisible","url","className","clsx","styles","invisible","title","iframe","src","App","useState","setIframeVisible","handleIframeSwitchChange","useCallback","e","target","value","initialTabValue","URLSearchParams","window","location","search","get","tabValue","setTabValue","z","history","pushState","tab","toString","topContainer","host","htmlFor","Group","options","onChange","optionType","size","buttonStyle","label","SHOWCOOKIE2ME_URL","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"6NAMAA,QAAQC,IAAIC,kNAGZ,IAAMC,EAA6C,CAAC,UAAW,UAqD/D,IAAMC,EAAyE,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,cAAeC,EAAU,EAAVA,IAC7F,OAAO,qCACH,oBAAGC,UAAWC,YAAK,eAAGC,IAAOC,UAA8B,WAAlBL,IAAzC,yBACUC,KACV,wBAAQK,MAAM,eACNJ,UAAWC,YAAKC,IAAOG,OAAR,eAAmBH,IAAOJ,cAAkC,YAAlBA,IACzDQ,IAAKP,QAKNQ,EA9Df,WAAgB,IAAD,EAC+BC,mBAA8B,UAD7D,mBACJV,EADI,KACWW,EADX,KAELC,EAA2BC,uBAAY,SAAAC,GACzCH,EAAiBG,EAAEC,OAAOC,SAC3B,IACGC,EAAkB,IAAIC,gBAAgBC,OAAOC,SAASC,QAAQC,IAAI,QAAU,yBALvE,EAMqBZ,mBAASO,GAN9B,mBAMJM,EANI,KAMMC,EANN,KAOLC,EAAIZ,uBAAY,SAACC,GACnB,IAAMS,EAAWT,EAAEC,OAAOC,MAC1BQ,EAAYD,GACZJ,OAAOO,QAAQC,UAAU,KAAMJ,EAAU,IAAM,IAAIL,gBAAgB,CAAEU,IAAKL,IAAYM,cACvF,IAGH,OACI,sBAAK3B,UAAWE,IAAOK,IAAvB,UACI,sBAAKP,UAAWE,IAAO0B,aAAvB,UACI,yCAAYX,OAAOC,SAASW,QAE5B,sBAAK7B,UAAU,GAAf,UACI,uBAAO8B,QAAQ,aAAa9B,UAAU,GAAtC,oBACA,qBAAKA,UAAU,GAAf,SACI,cAAC,IAAM+B,MAAP,CAAaC,QAASpC,EACTkB,MAAOhB,EACPmC,SAAUvB,EACVwB,WAAW,SACXC,KAAM,QACNC,YAAY,cAE7B,uBAAON,QAAQ,aAAa9B,UAAU,GAAtC,2BACA,qBAAKA,UAAU,GAAf,SACI,cAAC,IAAM+B,MAAP,CACIC,QAAS,CAAC,CACNlB,MAAO,yBACPuB,MAAO,2BACR,CAAEvB,MAAO,qBAAsBuB,MAAO,mBACzCvB,MAAOO,EACPY,SAAUV,EACVW,WAAW,SACXC,KAAM,QACNC,YAAY,kBAK5B,cAAC,EAAD,CAAerC,IAAKuC,0BAA0BjB,EAAUvB,cAAeA,QC1CpEyC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,SAM5Bb,K,kBCfAc,EAAOC,QAAU,CAAC,IAAM,iBAAiB,UAAY,uBAAuB,QAAU,qBAAqB,aAAe,0BAA0B,cAAgB,2BAA2B,OAAS,oBAAoB,cAAgB,2BAA2B,UAAY,uBAAuB,gBAAgB,8B","file":"static/js/main.fada5ce6.chunk.js","sourcesContent":["import React, { FC, useCallback, useState } from 'react'\nimport styles from './App.module.scss'\nimport { Radio } from 'antd'\nimport clsx from 'clsx'\n\nconst SHOWCOOKIE2ME_URL = process.env.REACT_APP_SHOWCOOKIE2ME_URL\nconsole.log(process.env)\n\ntype HiddenIframeOptions = 'Visible' | 'Hidden';\nconst hiddenIframeOptions: HiddenIframeOptions[] = ['Visible', 'Hidden']\n\nfunction App() {\n    const [iframeVisible, setIframeVisible] = useState<HiddenIframeOptions>('Hidden')\n    const handleIframeSwitchChange = useCallback(e => {\n        setIframeVisible(e.target.value)\n    }, [])\n    const initialTabValue = new URLSearchParams(window.location.search).get('tab') || 'direct-document-cookie'\n    const [tabValue, setTabValue] = useState(initialTabValue)\n    const z = useCallback((e) => {\n        const tabValue = e.target.value\n        setTabValue(tabValue)\n        window.history.pushState(null, tabValue, '?' + new URLSearchParams({ tab: tabValue }).toString())\n    }, [])\n\n\n    return (\n        <div className={styles.App}>\n            <div className={styles.topContainer}>\n                <h2>A site {window.location.host}</h2>\n\n                <div className=\"\">\n                    <label htmlFor=\"firstname1\" className=\"\">Iframe</label>\n                    <div className=\"\">\n                        <Radio.Group options={hiddenIframeOptions}\n                                     value={iframeVisible}\n                                     onChange={handleIframeSwitchChange}\n                                     optionType=\"button\"\n                                     size={'small'}\n                                     buttonStyle=\"outline\" />\n                    </div>\n                    <label htmlFor=\"firstname1\" className=\"\">Cookie method</label>\n                    <div className=\"\">\n                        <Radio.Group\n                            options={[{\n                                value: 'direct-document-cookie',\n                                label: 'Direct document.cookie ',\n                            }, { value: 'storage-access-api', label: 'Storage access' }]}\n                            value={tabValue}\n                            onChange={z}\n                            optionType=\"button\"\n                            size={'large'}\n                            buttonStyle=\"solid\" />\n                    </div>\n                </div>\n\n            </div>\n            <IFrameContent url={SHOWCOOKIE2ME_URL + '/' + tabValue} iframeVisible={iframeVisible} />\n\n        </div>\n    )\n}\n\nconst IFrameContent: FC<{ url: string, iframeVisible: HiddenIframeOptions }> = ({ iframeVisible, url }) => {\n    return <>\n        <p className={clsx({ [styles.invisible]: iframeVisible === 'Hidden' })}>Iframe\n            URL: {url}</p>\n        <iframe title=\"A note maker\"\n                className={clsx(styles.iframe, { [styles.iframeVisible]: iframeVisible === 'Visible' })}\n                src={url}\n        />\n    </>\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__15LM-\",\"AppHeader\":\"App_AppHeader__3Nt2M\",\"AppLink\":\"App_AppLink__2NoxF\",\"topContainer\":\"App_topContainer__2bXXu\",\"tabsContainer\":\"App_tabsContainer__39LDa\",\"iframe\":\"App_iframe__3JT5H\",\"iframeVisible\":\"App_iframeVisible__2qH5W\",\"invisible\":\"App_invisible__1Yny1\",\"App-logo-spin\":\"App_App-logo-spin__1EbLw\"};"],"sourceRoot":""}